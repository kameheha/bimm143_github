---
title: "Class 05: Data Visualization with GGPLOT"
author: "Victor Yu"
format: pdf
---

#Plotting in R

R has multiple plotting and graphics systems. The most popular of which is **ggplot2**.

We have already played with "base" R graphics. This comes along with R "out of the box"

```{r}
plot(cars)
```

Compared to base R plots ggplot is much more verbose - I need to write more code to get simplw plots like the above.

To use ggplot I nrrf to first install the ggplot2 paxkage. To install any package in R I use the `install.packages()` command along with the package name.

The install is a one time only requirement. The package is now on our computer. I don't need to re-install it.

However, I can't just use it without loading it up with a `library()` call.

install.packages("ggplot2")

```{r}
library(ggplot2)
```

```{r}
ggplot(cars)
```

All ggplot figures need at least 3 things:

-data (this is the data.frame with our numbers) -aesthetics () ("aes", how our data maps to the plot) -geoms (do we want lines, points, columns, etc...)

```{r}
#Store to BB as a variable.
bb <-  ggplot(data=cars) + 
  aes(x=speed, y=dist) +
geom_smooth() + geom_point()

bb
```
I want a trend line to show the relationship between speed and stopping (smooth)

```{r}
# "bb is your base plot. Add stuff onto it
bb + geom_smooth(method = "lm", se=FALSE)

```

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)

ncol(genes)
colnames(genes)
table(genes$State)
round ( table(genes$State) / nrow(genes)*100, 2)
```

```{r}
ggplot(genes) + 
  aes (x=Condition1, y =Condition2) +
  geom_point()
```
```{r}
p <- ggplot(genes) + 
    aes(x=Condition1, y=Condition2, col=State) +
    geom_point()
p
```

```{r}
p + scale_colour_manual(values = c("blue", "gray","red")) +
  labs(title = "Gene Expression Changes Upon Drug Treatment", x="Control (no drug)", y="Drug Treatment")
```

```{r}
#install.packages ("dplyr") for DPLYR
#install.packages("gapminder") for gapminder
library(gapminder)
library(dplyr)
```


```{r}
# File location online
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"
gapminder <- read.delim(url)
gapminder_2007 <- gapminder %>% filter(year==2007)

ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp) +
    geom_point(alpha=0.4)
```

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color= continent, size = pop) +
    geom_point(alpha=0.4)
```


```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color= pop) +
    geom_point(alpha=0.4)
```

```{r}
ggplot(gapminder_2007) +
  geom_point(aes(x = gdpPercap, y = lifeExp, size = pop), alpha = 0.5) + 
  scale_size_area (max_size=10)
```

```{r}
gapminder <- read.delim(url)
gapminder_1957 <- gapminder %>%filter(year==1957)

ggplot(gapminder_1957) +
  geom_point(aes(x=gdpPercap, y=lifeExp, color = continent, size = pop), alpha = 0.7) +
  scale_size_area(max_size = 15) 

```

```{r}
gapminder <- read.delim(url)
gapminder_1957_2007 <- gapminder %>%filter(year==1957 | year ==2007)


ggplot(gapminder_1957_2007) +
  geom_point(aes(x=gdpPercap, y=lifeExp, color = continent, size = pop), alpha = 0.7) +
  scale_size_area(max_size = 10) +
facet_wrap(~year)
```

